# 수 정렬하기 2

# 문제
# N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 수의 개수 N(1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄부터 N개의 줄에는 수가 주어진다. 이 수는 절댓값이 1,000,000보다 작거나 같은 정수이다. 수는 중복되지 않는다.

# 출력
# 첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다.

# 예제 입력 1
# 5
# 5
# 4
# 3
# 2
# 1
# 예제 출력 1
# 1
# 2
# 3
# 4
# 5

# sorted 사용
import sys
input = sys.stdin.readline

n = int(input())
li = []

for i in range(n):
    li.append(int(input()))

for i in sorted(li):
    print(i)

# sorted()는 새로운 정렬된 목록을 반환하며, 원래 목록은 영향을 받지 않는다.

# sorted() 메서드
#  sorted([5, 2, 3, 1, 4])
#  [1, 2, 3, 4, 5]
#  a = [5, 2, 3, 1, 4]

# sort() 메서드
#  a.sort()
#  a
#  [1, 2, 3, 4, 5]

# list.sort()은 list을 그 자리에서 정렬하고 목록 인덱스를 변경하고 None을 반환한다.(모든 내부 작업은 동일)

# sorted()은 list뿐만 아니라 반복 가능한 모든 작업에 적용할 수 있다.

# 문자열, 튜플, 딕셔너리, 제너레이터 등 모든 요소가 포함된 반복 가능한 객체를 정렬하여 반환한다.

# 따라서 list를 변경하려면 list.sort()를 사용하고, 새로운 정렬된 객체를 원하면 sorted()를 사용하면 된다.

# list의 경우에 list.sort()는 복사본을 만들 필요가 없으므로 sorted()보다 빠르다. 다른 이터레이터의 경우 선택의 여지가 없다. (sorted만 사용할 수 있기 때문)
