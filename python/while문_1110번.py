# 문제
# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.

# 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.

# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.

# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

# 출력
# 첫째 줄에 N의 사이클 길이를 출력한다.


N = int(input())  # 입력받은 값을 int로 바꿈
num = N  # 변하는 값
count = 0  # 몇 번 사이클인지

# 26을 입력했을경우
while True:
    a = num//10  # 26을 10으로 나눈 몫이므로 십의자리인 2가 나옴
    b = num % 10  # 26을 10으로 나눈 나머지 이므로 일의자리인 6이 나옴
    c = (a+b) % 10  # 2와 6을 더해 8을 만들고 10으로 나눠 나머지를 구해주면 a, b의 합의 일의자리인 8이 그대로 나옴
    # 새로운 수의 십의 자리는 b에서 10을 곱한 값이기 때문에 곱해주고 합의 일의자리 결과값 이였던 c를 더해준다.
    num = (b*10) + c
    count += 1  # 카운트를 1씩 증가시키고
    if(num == N):  # 만약 현재 num이 처음 N(26)과 같다면 while문을 종료시키고 아니라면 계속 반복한다.
        break

print(count)  # while문이 끝나면 카운트를 출력한다.
