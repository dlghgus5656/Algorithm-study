# 크로아티아 알파벳
# 문제
# 예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.

# 크로아티아 알파벳	변경
# č	c=
# ć	c-
# dž	dz=
# đ	d-
# lj	lj
# nj	nj
# š	s=
# ž	z=
# 예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

# dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.

# 입력
# 첫째 줄에 최대 100글자의 단어가 주어진다. 알파벳 소문자와 '-', '='로만 이루어져 있다.

# 단어는 크로아티아 알파벳으로 이루어져 있다. 문제 설명의 표에 나와있는 알파벳은 변경된 형태로 입력된다.

# 출력
# 입력으로 주어진 단어가 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

# 예제 입력 1
# ljes=njak
# 예제 출력 1
# 6
# 예제 입력 2
# ddz=z=
# 예제 출력 2
# 3
# 예제 입력 3
# nljj
# 예제 출력 3
# 3
# 예제 입력 4
# c=c=
# 예제 출력 4
# 2
# 예제 입력 5
# dz=ak
# 예제 출력 5
# 3

# 크로아티아 알파벳이 입력값에 있다면 그냥 한글자 알파벳으로 바꿔주는 방법이 있었다.

# 치환을 끝낸 후 길이를 리턴하는 방법으로 구현해보았다.

# 구현할때 dz= 가 z= 보다 앞에 있지 않으면 z=를 우선으로 바꿔버리게되므로 dz=가 z= 보다 앞에 있어야 한다.
a = ['c=', 'c-', 'dz=', 'd-', 'lj', 'nj', 's=', 'z=']
b = input()
for i in a:
    b = b.replace(i, 'a')
print(len(b))


a = ['c=', 'c-', 'dz=', 'd-', 'lj', 'nj', 's=', 'z=']
b = input()
for t in a:
    b = b.replace(t, '*')

print(len(b))
